{"version":3,"sources":["components/Playlist.js","components/Video.js","components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["Playlist","className","style","margin","fontWeight","color","marginLeft","fontSize","class","float","onClick","this","props","reset","background","border","borderTop","width","playlist","map","link","key","marginBottom","height","opacity","deleteVideo","onStart","videoEnd","onEnded","url","controls","playing","reorderVideoUp","reorderVideoDown","Component","Video","endVideo","display","Landing","state","current","handleChange","bind","handleSubmit","onVideoEnd","onEndVideo","event","setState","target","value","includes","undefined","match","length","play","newSong","isOn","push","alert","preventDefault","id","splice","index","console","log","shift","upper","lower","n","col","onSubmit","placeholder","borderWidth","borderBottom","type","name","onChange","backgroundSize","videoStart","onVideoStart","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89fb60ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { List, ListItem, ListItemContent } from 'react-mdl';\r\nimport ReactPlayer from 'react-player';\r\n\r\n\r\n// Controls the view of songs added to the playlist.\r\nclass Playlist extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"playlist-grid\">\r\n\r\n                {/* Playlist heading */}\r\n                <h2 style={{ margin: \"30px\", fontWeight: \"bold\", color: \"white\" }}>Playlist\r\n                    <span style={{ marginLeft: \"10px\", fontSize: \"38px\" }}><i class=\"fas fa-music\"></i></span>\r\n\r\n                    <span style={{ float: \"right\", fontSize: \"0px\" }}><button onClick={this.props.reset} \r\n                    style={{ background: \"black\", color: \"white\", fontSize: \"30px\", border: \"black\" }}><i class=\"fas fa-trash\"></i></button></span>\r\n                </h2>\r\n                <hr style={{ borderTop: \"5px solid red\", width: \"70%\" }} />\r\n\r\n                {/* listing all the songs in playlist  */}\r\n                <List >{\r\n                    this.props.playlist.map((link, key) => {\r\n\r\n                        return <ListItem style={{ marginBottom: \"4px\", height: \"10%\", width: \"80%\", opacity: \"0.8\" }}>\r\n                            <button style={{ background: \"black\", color: \"white\", fontSize: \"20px\", border: \"black\" }} className=\"icon\" onClick={() => this.props.deleteVideo({ key })}><i class=\"fas fa-times\"></i></button>\r\n                            <ListItemContent>\r\n                                <div key={key} >\r\n                                    <ReactPlayer onStart={() => this.props.videoEnd({ key })} onEnded={() => this.props.videoEnd({ key })} className=\"myvideo\" url={link.url} height={80} width={200} controls=\"true\" playing={false} />\r\n                                </div>\r\n                            </ListItemContent>\r\n                            <button style={{ marginLeft: \"10px\", background: \"black\", color: \"white\", fontSize: \"20px\", border: \"black\" }} className=\"icon-up\" onClick={() => this.props.reorderVideoUp({ key })}><i class=\"fas fa-arrow-up\"></i></button>\r\n                            <button style={{ background: \"black\", color: \"white\", fontSize: \"20px\", border: \"black\" }} className=\"icon-down\" onClick={() => this.props.reorderVideoDown({ key })}><i class=\"fa fa-arrow-down\"></i></button>\r\n                        </ListItem>\r\n                    })                    \r\n                }\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Playlist;","import React,{Component} from 'react';\r\nimport ReactPlayer from 'react-player';\r\n\r\n// Controls the view of playing video\r\nclass Video extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div style={{marginLeft:\"1rem\"}}>\r\n            <ReactPlayer  onEnded={()=>this.props.endVideo()}  url={this.props.link.url} height={650} width={\"100%\"} display=\"false\" controls=\"true\" playing/>\r\n            </div>\r\n                           \r\n        );\r\n    }\r\n}\r\n\r\nexport default Video;","import React, { Component } from 'react';\r\nimport { Grid, Cell,Textfield } from 'react-mdl';\r\nimport Playlist from './Playlist';\r\nimport Video from './Video';\r\n\r\n//Landing Page - has two child components\r\nclass Landing extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            current: \"\",//holds the video which is playing\r\n            link: \"\", // holds the user input(link)\r\n            playlist: [\r\n            ] //holds all the added links\r\n        }\r\n\r\n        //Binding the event handlers\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onVideoEnd = this.onVideoEnd.bind(this);\r\n        this.deleteVideo = this.deleteVideo.bind(this);\r\n        this.onEndVideo = this.onEndVideo.bind(this);\r\n        this.reorderVideoUp = this.reorderVideoUp.bind(this);\r\n        this.reorderVideoDown = this.reorderVideoDown.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n\r\n\r\n    //This handles the user input\r\n    handleChange(event) {\r\n        this.setState({ link: event.target.value })\r\n    }\r\n\r\n\r\n    //Adds the new link to playlist\r\n    handleSubmit(event) {\r\n\r\n        const url = this.state.link;\r\n\r\n        //URL Validation\r\n        if (url.includes(\"www.youtube.com\")) {\r\n            \r\n            if (url != undefined || url != '') \r\n            {\r\n                //Regex for validation\r\n                var regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\r\n                var match = url.match(regExp);\r\n                if (match && match[2].length == 11) {\r\n                    const play = this.state.playlist.map((link, key) => link);\r\n                    const newSong = { url: url, isOn: false };\r\n                    play.push(newSong);\r\n                    this.setState({ playlist: play })\r\n                    this.setState({ link: \" \" });\r\n                    // console.log(\"Success\");\r\n                }\r\n                else {\r\n                    alert(\"Please Check the Url again!\");\r\n                }\r\n            }\r\n        }\r\n        else\r\n            alert(\"Please Check the Url again!\");\r\n\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    //When Video is selected to play\r\n    onVideoEnd(id) {\r\n\r\n        const play = this.state.playlist.map((link, key) => link);\r\n        const current = play[id.key];//New line added\r\n        this.setState({ current });\r\n        play.splice(id.key, 1);\r\n\r\n        this.setState({ playlist: play });\r\n\r\n\r\n    }\r\n\r\n    //When video is removed from playlist\r\n    deleteVideo(index) {\r\n\r\n        console.log(\"index= \" + index.key);\r\n        const play = this.state.playlist.map((link, key) => link);\r\n        console.log(play[0]);\r\n        console.log(play[1]);\r\n        console.log(\"index= \" + index.key);\r\n        play.splice(index.key, 1);\r\n        console.log(play);\r\n        this.setState({ playlist: play })\r\n\r\n    }\r\n\r\n    //When the video ends\r\n    onEndVideo() {\r\n        const play = this.state.playlist.map((link, key) => link);\r\n\r\n        if (play.length !== 0) {\r\n            const current = play[0];\r\n            play.shift();\r\n            this.setState({ current, playlist: play });\r\n        }\r\n        else {\r\n            this.setState({ current: \"\" })\r\n        }\r\n    }\r\n\r\n    //Shifting the video up in playlist array\r\n    reorderVideoUp(id) {\r\n        if (id.key !== 0) {\r\n            const play = this.state.playlist.map((link, key) => link);\r\n            const upper = play[id.key - 1];\r\n            const lower = play[id.key];\r\n            play[id.key] = upper;\r\n            play[id.key - 1] = lower;\r\n            this.setState({ playlist: play });\r\n        }\r\n    }\r\n\r\n    //Shifting the video down in playlist array\r\n    reorderVideoDown(id) {\r\n        const play = this.state.playlist.map((link, key) => link);\r\n        const n = play.length;\r\n        if (id.key !== n - 1) {\r\n\r\n            const upper = play[id.key];\r\n            const lower = play[id.key + 1];\r\n            play[id.key] = lower;\r\n            play[id.key + 1] = upper;\r\n            this.setState({ playlist: play });\r\n        }\r\n    }\r\n\r\n    reset(){\r\n        this.setState({playlist:[],link:\"\"})\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"landing-grid\">\r\n                <Grid>\r\n                    <Cell col={8}>\r\n                        <div className=\"input-link\" >\r\n                            <form onSubmit={this.handleSubmit} >\r\n                               \r\n                                <input placeholder=\"   Add....\" style={{ width: \"300px\", borderWidth: \"2px\", height: \"2rem\",marginBottom:\" 3rem\",borderBottom:\"10px bold\" }} type=\"text\" name=\"ytlink\" value={this.state.link} onChange={this.handleChange} ></input>\r\n                                <button type=\"submit\" style={{ borderWidth: \"2px\", height: \"35px\", width: \"30px\" }}><i class=\"fas fa-plus\"></i></button>\r\n                            </form>\r\n                        </div>\r\n                        {/* Child Component */}\r\n                        <Video link={this.state.current} endVideo={this.onEndVideo} />\r\n                    </Cell>\r\n\r\n                    <Cell col={4} style={{background:\"black\",opacity:\"0.8\",backgroundSize:\"cover\"}}>\r\n                        <div className=\"second-col\">\r\n                            {/* Child Component  */}\r\n                            <Playlist playlist={this.state.playlist} videoStart={this.onVideoStart} videoEnd={this.onVideoEnd} deleteVideo={this.deleteVideo} reorderVideoUp={this.reorderVideoUp} reorderVideoDown={this.reorderVideoDown} reset={this.reset} />\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React from 'react';\nimport './App.css';\nimport Landing from './components/Landing' ;\n\nfunction App() {\n  return (\n    <div>\n        <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}